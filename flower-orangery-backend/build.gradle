plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id "org.openapi.generator" version "6.2.0"
}

group = 'com.github.straight'
version = '0.0.1-SNAPSHOT'
//Gradle 7.5.1 not supports Java 19
sourceCompatibility = '18'

idea {
    module {
        generatedSourceDirs += file("${buildDir}/generated-src/src".toString())
    }
}

compileJava.dependsOn('openApiGenerate')

var rootPackage = 'flower-orangery'
openApiGenerate {
    generatorName = "spring"
    library = "spring-boot"
    inputSpec = "${rootDir}/openapi/openapi.yaml".toString()
    outputDir = "${buildDir}/generated-src".toString()
    configOptions = configOptions = [
            useOptional             : "true",
            swaggerDocketConfig     : "false",
            performBeanValidation   : "false",
            useBeanValidation       : "false",
            useTags                 : "true",
            singleContentTypes      : "true",
            basePackage             : "${group}.${rootPackage}.api",
            configPackage           : "${group}.${rootPackage}.api",
            title                   : rootProject.name,
            java8                   : "false",
            dateLibrary             : "java8",
            serializableModel       : "true",
            artifactId              : rootProject.name,
            apiPackage              : "${group}.${rootPackage}.api",
            modelPackage            : "${group}.${rootPackage}.model",
            invokerPackage          : "${group}.${rootPackage}.api",
            interfaceOnly           : "true",
            generateSupportingFiles : "true",
            skipDefaultInterface    : "true",
    ]
}

sourceSets {
    main {
        java {
            srcDir new File(buildDir, 'generated-src/src/main/java')
        }
    }
    test {
        resources {
            srcDir 'src/test/java/resources'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // see https://github.com/OpenAPITools/openapi-generator/issues/2901
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    // see https://github.com/OpenAPITools/openapi-generator/issues/4245
    implementation 'org.openapitools:jackson-databind-nullable:0.2.2'

    testImplementation 'org.assertj:assertj-core:3.23.1'

    runtimeOnly 'com.h2database:h2:2.1.212'

    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // see https://springfox.github.io/springfox/docs/current/
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
}

test {
    useJUnitPlatform()
}
